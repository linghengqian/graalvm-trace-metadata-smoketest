[
{
  "name":"net.bytebuddy.agent.Installer",
  "methods":[
    {"name":"agentmain","parameterTypes":["java.lang.String","java.lang.instrument.Instrumentation"] }, 
    {"name":"getInstrumentation","parameterTypes":[] }
  ]
},
{
  "name":"net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.Invoker",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.Invoker$Dispatcher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.shardingsphere.elasticjob.api.ElasticJob",
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.shardingsphere.elasticjob.error.handler.JobErrorHandlerReloadable",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.shardingsphere.elasticjob.error.handler.general.LogJobErrorHandler",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.shardingsphere.elasticjob.executor.item.JobItemExecutor",
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.shardingsphere.elasticjob.executor.item.impl.ClassedJobItemExecutor",
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.shardingsphere.elasticjob.infra.concurrent.ExecutorServiceReloadable",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.shardingsphere.elasticjob.infra.handler.sharding.JobInstanceBeanInfo"
},
{
  "name":"org.apache.shardingsphere.elasticjob.infra.handler.sharding.JobInstanceCustomizer"
},
{
  "name":"org.apache.shardingsphere.elasticjob.infra.listener.ElasticJobListener",
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.shardingsphere.elasticjob.infra.spi.TypedSPI",
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.shardingsphere.elasticjob.lite.api.bootstrap.impl.OneOffJobBootstrap",
  "fields":[{"name":"jobScheduler"}]
},
{
  "name":"org.apache.shardingsphere.elasticjob.lite.api.listener.AbstractDistributeOnceElasticJobListener",
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.shardingsphere.elasticjob.lite.internal.schedule.JobRegistry",
  "fields":[{"name":"instance"}]
},
{
  "name":"org.apache.shardingsphere.elasticjob.lite.internal.schedule.JobScheduleController",
  "fields":[
    {"name":"jobDetail"}, 
    {"name":"scheduler"}
  ]
},
{
  "name":"org.apache.shardingsphere.elasticjob.lite.internal.schedule.JobShutdownHookPlugin",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setCleanShutdown","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.apache.shardingsphere.elasticjob.lite.internal.schedule.JobShutdownHookPluginBeanInfo"
},
{
  "name":"org.apache.shardingsphere.elasticjob.lite.internal.schedule.JobShutdownHookPluginCustomizer"
},
{
  "name":"org.apache.shardingsphere.elasticjob.lite.internal.snapshot.SnapshotService",
  "fields":[{"name":"serverSocket"}]
},
{
  "name":"org.apache.zookeeper.AddWatchMode"
},
{
  "name":"org.apache.zookeeper.ClientCnxnSocketNIO",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.zookeeper.client.ZKClientConfig"] }]
},
{
  "name":"org.apache.zookeeper.server.quorum.MultipleAddresses",
  "methods":[{"name":"getReachableOrOne","parameterTypes":[] }]
},
{
  "name":"org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer",
  "fields":[{"name":"addr"}]
},
{
  "name":"org.mockito.Mock",
  "queryAllPublicMethods":true
},
{
  "name":"org.mockito.configuration.MockitoConfiguration"
},
{
  "name":"org.mockito.internal.configuration.DefaultDoNotMockEnforcer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.configuration.InjectingAnnotationEngine",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.creation.instance.DefaultInstantiatorProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.creation.proxy.ProxyMockMaker",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.matchers.Any",
  "queryAllPublicMethods":true
},
{
  "name":"org.mockito.internal.matchers.Equals",
  "queryAllPublicMethods":true
},
{
  "name":"org.mockito.internal.matchers.InstanceOf",
  "queryAllPublicMethods":true
},
{
  "name":"org.mockito.internal.util.ConsoleMockitoLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.util.reflection.InstrumentationMemberAccessor$Dispatcher",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.util.reflection.ModuleMemberAccessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.junit.jupiter.MockitoExtension",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.quartz.simpl.CascadingClassLoadHelper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
}
]